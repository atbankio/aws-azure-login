name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: yarn install
      - run: yarn test
      - run: yarn build
      - uses: actions/upload-artifact@v2
        with:
          name: lib
          path: lib

  # publish-npm:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: lib
  #         path: lib
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 14
  #         registry-url: https://registry.npmjs.org/
  #     - run: npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: lib
          path: lib
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: linux/arm64,linux/amd64
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      # - name: Build the Docker image
      #   run: docker buildx build . --file Dockerfile --platform=linux/amd64,linux/arm64 --tag aws-azure-login:$(date +%s) --tag aws-azure-login:latest
      - name: Build and push to registry
        uses: docker/build-push-action@v2
        env:
          # DOCKER_PLATFORMS: linux/amd64,linux/arm64
        with:
          context: .
          platforms: linux/arm64,linux/amd64
          push: true
          tags: aws-azure-login:latest

  # publish-snap:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: lib
  #         path: lib
  #     - uses: snapcore/action-build@v1
  #       id: build
  #     - uses: snapcore/action-publish@v1
  #       with:
  #         store_login: ${{ secrets.SNAPCRAFT_STORE_LOGIN }}
  #         snap: ${{ steps.build.outputs.snap }}
  #         release: stable
